name: Build (Release)
run-name: 'Release: Build ${{ github.event.inputs.version }} from ${{ github.sha }}'

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Kernel Version'
        required: true
        default: 'v'
      tag:
        description: 'Release Tag'
        required: true
        default: 'v-linux-stable'
      token:
        description: 'Token (Leave Empty to Use GitHub Token)'
        required: false
        default: ''
        type: string

jobs:
  Build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout Tree
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Setup Build Environment
        run: |
          sudo apt update && sudo apt upgrade -y && sudo apt install build-essential --no-install-recommends -y

      - name: Install Python 2.7
        run: |
          wget http://security.ubuntu.com/ubuntu/pool/universe/p/python2.7/python2.7_2.7.18-13ubuntu1.5_amd64.deb http://security.ubuntu.com/ubuntu/pool/universe/p/python2.7/libpython2.7-stdlib_2.7.18-13ubuntu1.5_amd64.deb http://security.ubuntu.com/ubuntu/pool/universe/p/python2.7/python2.7-minimal_2.7.18-13ubuntu1.5_amd64.deb http://security.ubuntu.com/ubuntu/pool/universe/p/python2.7/libpython2.7-minimal_2.7.18-13ubuntu1.5_amd64.deb  
          sudo apt install ./libpython2.7-minimal_2.7.18-13ubuntu1.5_amd64.deb ./libpython2.7-stdlib_2.7.18-13ubuntu1.5_amd64.deb ./python2.7-minimal_2.7.18-13ubuntu1.5_amd64.deb ./python2.7_2.7.18-13ubuntu1.5_amd64.deb
          sudo ln -s --force /usr/bin/python2.7 /usr/bin/python2
          
      - name: Set Environment Variable
        run: |
          SHA=$(git rev-parse --short ${{ github.sha }})
          echo BUILD_DATE=$(date +'%Y%m%d') >> $GITHUB_ENV
          echo COMMIT_SHA=$SHA >> $GITHUB_ENV
          echo BUILD_KERNEL_VERSION=${{ github.event.inputs.version }} >> $GITHUB_ENV
          
      - name: Building Kernel
        run: |
            bash build.sh -v ${{ env.BUILD_KERNEL_VERSION }} -r y

      - name: Upload Kernel
        uses: actions/upload-artifact@v4
        with:
          name: "oItsMineZKernel-${{ env.BUILD_KERNEL_VERSION }}-${{ env.COMMIT_SHA }}-${{ env.BUILD_DEVICE }}-${{ env.BUILD_MODEL }}"
          path: |
            build/export/*.zip

  Release:
    needs: Build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Download All Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Release Build Kernel
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.event.inputs.tag }}
          name: "${{ github.event.inputs.tag }}"
          draft: true
          generateReleaseNotes: true
          makeLatest: true
          skipIfReleaseExists: true
          token: ${{ github.event.inputs.token != '' && github.event.inputs.token || github.token }}
          removeArtifacts: true
          artifacts: "artifacts/**/*.zip"

      - name: Cleanup Artifacts
        uses: geekyeggo/delete-artifact@v5
        with:
          name: o*
